0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ;
0004   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0005   0000             ; If you wish to use it elsewhere, please include an acknowledgement to myself.
0006   0000             ;
0007   0000             ; http://searle.hostei.com/grant/index.html
0008   0000             ;
0009   0000             ; eMail: home.micros01@btinternet.com
0010   0000             ;
0011   0000             ; If the above don't work, please perform an Internet search to see if I have
0012   0000             ; updated the web page hosting service.
0013   0000             ;
0014   0000             ;==================================================================================
0015   0000             
0016   0000             loadAddr	.EQU	0D000h
0017   0000             numSecs		.EQU	24	; Number of 512 sectors to be loaded
0018   0000             
0019   0000             SD_DATA		.EQU	088H
0020   0000             SD_CONTROL	.EQU	089H
0021   0000             SD_STATUS	.EQU	089H
0022   0000             SD_LBA0		.EQU	08AH
0023   0000             SD_LBA1		.EQU	08BH
0024   0000             SD_LBA2		.EQU	08CH
0025   0000             
0026   0000             LF		.EQU	0AH		;line feed
0027   0000             FF		.EQU	0CH		;form feed
0028   0000             CR		.EQU	0DH		;carriage RETurn
0029   0000             
0030   0000             ;================================================================================================
0031   0000             
0032   5000             		.ORG	5000H		; Loader origin.
0033   5000             
0034   5000 CD B4 50    		CALL	printInline
0035   5003 43502F4D2053		.TEXT "CP/M System Transfer by G. Searle 2012-13"
0035   5009 797374656D205472616E7366657220627920472E20536561726C6520323031322D3133
0036   502C 0D 0A 00    		.DB CR,LF,0
0037   502F             
0038   502F 06 18       		LD	B,numSecs
0039   5031             
0040   5031 3E 00       		LD	A,0
0041   5033 32 C5 50    		LD	(lba0),A
0042   5036 32 C6 50    		ld 	(lba1),A
0043   5039 32 C7 50    		ld 	(lba2),A
0044   503C 32 C8 50    		ld 	(lba3),A
0045   503F 21 00 D0    		LD	HL,loadAddr
0046   5042 22 C9 50    		LD	(dmaAddr),HL
0047   5045             processSectors:
0048   5045             
0049   5045 CD 8C 50    		call	writehst
0050   5048             
0051   5048 11 00 02    		LD	DE,0200H
0052   504B 2A C9 50    		LD	HL,(dmaAddr)
0053   504E 19          		ADD	HL,DE
0054   504F 22 C9 50    		LD	(dmaAddr),HL
0055   5052 3A C5 50    		LD	A,(lba0)
0056   5055 3C          		INC	A
0057   5056 32 C5 50    		LD	(lba0),A
0058   5059             
0059   5059 10 EA       		djnz	processSectors
0060   505B             
0061   505B CD B4 50    		CALL	printInline
0062   505E 0D 0A       		.DB CR,LF
0063   5060 53797374656D		.TEXT "System transfer complete"
0063   5066 207472616E7366657220636F6D706C657465
0064   5078 0D 0A 00    		.DB CR,LF,0
0065   507B             
0066   507B C9          		RET				
0067   507C             
0068   507C             ; =========================================================================
0069   507C             ; Disk routines as used in CBIOS
0070   507C             ; =========================================================================
0071   507C             setLBAaddr:
0072   507C 3A C7 50    		LD	A,(lba2)
0073   507F D3 8C       		OUT	(SD_LBA2),A
0074   5081 3A C6 50    		LD	A,(lba1)
0075   5084 D3 8B       		OUT	(SD_LBA1),A
0076   5086 3A C5 50    		LD	A,(lba0)
0077   5089 D3 8A       		OUT	(SD_LBA0),A
0078   508B C9          		ret
0079   508C             
0080   508C             ;================================================================================================
0081   508C             ; Write physical sector to host
0082   508C             ;================================================================================================
0083   508C             
0084   508C             writehst:
0085   508C F5          		PUSH 	AF
0086   508D C5          		PUSH 	BC
0087   508E E5          		PUSH 	HL
0088   508F             
0089   508F DB 89       wrWait1: IN	A,(SD_STATUS)
0090   5091 FE 80       		CP	128
0091   5093 20 FA       		JR	NZ,wrWait1
0092   5095             
0093   5095 CD 7C 50    		CALL 	setLBAaddr
0094   5098             		
0095   5098 3E 01       		LD	A,$01	; 01 = Write block
0096   509A D3 89       		OUT	(SD_CONTROL),A
0097   509C             	
0098   509C 0E 04       		LD 	c,4
0099   509E             		;LD 	HL,hstbuf
0100   509E             wr4secs:
0101   509E 06 80       		LD 	b,128
0102   50A0             wrByte:
0103   50A0             	
0104   50A0 DB 89       wrWait2: IN	A,(SD_STATUS)
0105   50A2 FE A0       		CP	160 ; Write buffer empty
0106   50A4 20 FA       		JR	NZ,wrWait2
0107   50A6             
0108   50A6 7E          		LD 	A,(HL)
0109   50A7 D3 88       		OUT	(SD_DATA),A
0110   50A9 23          		INC 	HL
0111   50AA 05          		dec 	b
0112   50AB 20 F3       		JR 	NZ, wrByte
0113   50AD             
0114   50AD 0D          		dec 	c
0115   50AE 20 EE       		JR 	NZ,wr4secs
0116   50B0             
0117   50B0 E1          		POP 	HL
0118   50B1 C1          		POP 	BC
0119   50B2 F1          		POP 	AF
0120   50B3             		
0121   50B3             		;XOR 	a
0122   50B3             		;ld	(erflag),a
0123   50B3 C9          		RET
0124   50B4             
0125   50B4             
0126   50B4             ;================================================================================================
0127   50B4             ; Utilities
0128   50B4             ;================================================================================================
0129   50B4             
0130   50B4             printInline:
0131   50B4 E3          		EX 	(SP),HL 	; PUSH HL and put RET ADDress into HL
0132   50B5 F5          		PUSH 	AF
0133   50B6 C5          		PUSH 	BC
0134   50B7 7E          nextILChar:	LD 	A,(HL)
0135   50B8 FE 00       		CP	0
0136   50BA 28 04       		JR	Z,endOfPrint
0137   50BC CF          		RST 	08H
0138   50BD 23          		INC 	HL
0139   50BE 18 F7       		JR	nextILChar
0140   50C0 23          endOfPrint:	INC 	HL 		; Get past "null" terminator
0141   50C1 C1          		POP 	BC
0142   50C2 F1          		POP 	AF
0143   50C3 E3          		EX 	(SP),HL 	; PUSH new RET ADDress on stack and restore HL
0144   50C4 C9          		RET
0145   50C5             
0146   50C5 00          lba0		.DB	00h
0147   50C6 00          lba1		.DB	00h
0148   50C7 00          lba2		.DB	00h
0149   50C8 00          lba3		.DB	00h
0150   50C9 00 00       dmaAddr		.dw	0
0151   50CB             
0152   50CB             	.END
tasm: Number of errors = 0
